<h1>lurk_incidents</h1>
<h4>... is a mess, but hey, I'm having fun</h4>
<div class="row">
  <div class="col-sm-6">
      <form method="POST" action="/">
        <div class="form-group">
          
        <label for="target-url">Target URL</label>
        <input type="email" class="form-control" id="target-url" placeholder="enter URL" value="<%= @target_url || "enter URL" %>">
        
        <p><em>Fetching will take a minute if the target is not in the cache (yet). Faster after caching.</em></p>
        <input type="submit" class="btn btn-default" value="Fetch all incidents">
      </form>
  </div>
  <div class="col-sm-2">
  </div>
</div>
<hr/>
<% if @incidents %>
  <div class="row">
    <div class="col-sm-12">
      <h1>Total reported downtime per month</h1>
      <h3>bit misleading: does not group by components; TODO - change that?</h3>
      <%= 
        bar_chart(
          @incidents.group_by{|item| 
            "#{item.started_at.year}-#{item.started_at.month}-28"
          }.map{|key, group_of_incidents| 
            [key, group_of_incidents.map(&:duration_hours).inject(:+)]
          },
          height: "500px"
        )
      %>
    </div>
    <div class="col-sm-12">
        <h1>Every incident - duration in hours</h1>
        <p>note, you don't see much detail, because outliers crowd out</p>
        <%= 
          bar_chart(@incidents.group_by(&:uuid).map{|key, group_of_incidents| 
              [key, group_of_incidents.map{|x| x.duration_hours.to_f}]
          }, width: "100%", height: "1500px")
        %>
        <h5>now excluding high-outliers (shows more detail)</h5>
        <p><em>The high-outliers are not 'irrelevant data' (it's all about context/goals) BUT I want to 'zoom' this graph...</em></p>
        <%= 
          bar_chart(@incidents_exclude_long.group_by(&:uuid).map{|key, group_of_incidents| 
              [key, group_of_incidents.map{|x| x.duration_hours.to_f}]
          }, width: "100%", height: "1500px")
        %>
    </div>
    <div class="col-sm-12">
        <h1>Let's try overlaying years</h1>
        <p>Maybe it will show some consistent fluctuations with the seasons. (Highest outliers removed.)</h3>
        <h4>sum of hours per day-of-year</h4>

        <h5>now excluding high-outliers (shows more detail)</h5>
        <%= 
            scatter_chart(@incidents_exclude_long.group_by{|x| x.started_at.year}.map{|label, incidents_by_year| 
                {
                    name: label, 
                    # XXX(hangtwenty) I kept trying (and failing) to group_by #{x.started_at.month}-#{x.started_at.day} or even index,
                    # and kept winding up with total soup on the Chartkick side... but ... #yday to the rescue! (day of year as a number)
                    data: incidents_by_year.group_by{|x| "#{x.started_at.yday}"}.map{|label, incidents_this_day|
                        [label, incidents_this_day.map{|inc| inc.duration_hours.to_f}.sum]
                    }
                }
          }, width: "100%")
        %>

        <h4>sum of incidents per month</h4>
        <h5>(no removal of outliers)</h5>
        <%= 
            line_chart(@incidents.group_by{|x| x.started_at.year}.map{|label, incidents_by_year| 
                {
                    name: label, 
                    # XXX(hangtwenty) I kept trying (and failing) to group_by #{x.started_at.month}-#{x.started_at.day} or even index,
                    # and kept winding up with total soup on the Chartkick side... but ... #yday to the rescue! (day of year as a number)
                    data: incidents_by_year.group_by{|x| "#{x.started_at.month}"}.map{|label, subgroup|
                        [label, subgroup.size]
                    }
                }
          }, width: "100%")
        %>
    </div>
  </div>
<% else %>
  <div class="row">No data yet. Punch in target URL and submit.</div>
<% end %>
